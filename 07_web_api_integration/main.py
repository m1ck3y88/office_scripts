from pprint import pprint as pp
from faker import Faker
import requests
import json

'''
In a previous chapter we pulled data from a local SQL database and then stored it
into a CSV file which was then converted to an Excel file. Although this is a very
useful skill for repetitive and/or administrative tasks, oftentimes you may not
have privileges to do so, or there may not be a database available to help perform
whatever task is needed. This is where knowing how to consume web APIs comes in
handy. 

This script uses the Faker library to generate some dummy data to then store
into a JSON file which can be used to make the API calls. Also, I've pulled data
from a domain that provides a free service to set up a fake web API. The site is
called 'https://beeceptor.com/'. 

You'll notice that 'dvdrental.free.' is prepended
to the aforementioned URL. This is a result of a fake web API endpoint I created
that uses the same name as the local database we used in a previous chapter. Note
that this name is only being used for familiarity purposes, but the data that
comes from this endpoint is completely different from the database we used previously,
as this data was generated by running the script below. 

There are thousands of free open source web APIs out there, so you can use whichever 
one you prefer. Nevertheless, this free web API lets you quickly create your own dummy 
API and get up and running, straightaway. There is a brief tutorial on the site to help
you get started.
'''

fake = Faker()


def generate_json_data(num, filename):
    """
    :param num: Takes an int and generates the corresponding json data.
    :param filename: Takes a string as the file name for json data to be dumped to.
    """
    # Create dictionary to store fake customer data in
    customer_data = {}
    for i in range(num):
        customer_data[i] = {}
        customer_data[i]['id'] = str(i + 1)
        customer_data[i]['name'] = fake.name()
        customer_data[i]['email'] = fake.email()
        customer_data[i]['company'] = fake.company()
        customer_data[i]['job'] = fake.job()
    pp(customer_data)

    # Dump fake customer data into a json file  
    with open(f'{filename}.json', 'w') as file:
        json.dump(customer_data, file, indent=6)


# This will generate 20 fake profiles with the above listed properties and
# create a file called 'customers.json' if not already created (which I have).
# Feel free to generate however many fake customers and name the file whatever
# you want. Alternatively, you can delete the current customers.json file
# and run the script again to generate a new customer.json file.
generate_json_data(20, 'customers')

# This gets data from the already-created API endpoint passed to the get()
# function of the requests module. You can skip the last step if you want
# to just get straight to the data and do something with it by deleting
# or commenting out the invocation of the generate_json_data() function.
get_request = requests.get('https://dvdrental.free.beeceptor.com/customers')

# Format response into JSON
response = get_request.json()

# Neatly prints out data retrieved from API call
pp(response)
